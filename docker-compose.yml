services:
  # Main data science application
  data-science-app:
    build: .
    container_name: iris-mvp
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./notebooks:/app/notebooks
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - PYTHONPATH=/app
    command: python main.py

  # Jupyter Lab service
  jupyter:
    build: .
    container_name: iris-jupyter
    volumes:
      - ./:/app
    ports:
      - "8888:8888"
    environment:
      - PYTHONPATH=/app
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''

  # FastAPI service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: iris-api
    volumes:
      - ./models:/app/models
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    depends_on:
      - data-science-app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Model training service (for batch training)
  training:
    build: .
    container_name: iris-training
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./src:/app/src
    environment:
      - PYTHONPATH=/app
    command: python train_enhanced.py
    profiles:
      - training

  # Testing service
  test:
    build: .
    container_name: iris-test
    volumes:
      - ./:/app
    environment:
      - PYTHONPATH=/app
    command: pytest tests/ -v --cov=src --cov-report=html --cov-report=term-missing
    profiles:
      - test

networks:
  default:
    name: data-science-network

volumes:
  models:
    driver: local
  data:
    driver: local